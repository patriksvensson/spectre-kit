[{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/!=(_:_:)"},"type":"topLevelPage"},"headings":[],"title":"!=(_:_:)","summary":"Inherited from Equatable.!=(_:_:)."},{"kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLine"},"type":"topLevelPage"},"title":"SegmentLine","rawIndexableTextContent":"Represents a line of terminal segments. ","summary":"Represents a line of terminal segments.","headings":[]},{"title":"SegmentLineIterator.Element","rawIndexableTextContent":"Inherited from IteratorProtocol.Element. ","kind":"symbol","summary":"Inherited from IteratorProtocol.Element.","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/Element"}},"headings":[]},{"title":"italic","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/italic"}},"kind":"symbol","rawIndexableTextContent":"Italic text. ","summary":"Italic text.","headings":[]},{"rawIndexableTextContent":"","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/Error-Implementations"}},"kind":"article","title":"Error Implementations","summary":"","headings":[]},{"rawIndexableTextContent":"Inherited from OptionSet.formSymmetricDifference(_:). ","title":"formSymmetricDifference(_:)","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/formSymmetricDifference(_:)","interfaceLanguage":"swift"}},"summary":"Inherited from OptionSet.formSymmetricDifference(_:).","headings":[]},{"title":"bold","summary":"Bold text.","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/bold","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[],"rawIndexableTextContent":"Bold text. "},{"kind":"symbol","summary":"Inherited from Renderable.render(options:maxWidth:).","headings":[],"rawIndexableTextContent":"Inherited from Renderable.render(options:maxWidth:). ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Markup\/render(options:maxWidth:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"render(options:maxWidth:)"},{"rawIndexableTextContent":"A linebreak segment. ","title":"Segment.lineBreak","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/lineBreak","interfaceLanguage":"swift"}},"summary":"A linebreak segment.","headings":[]},{"kind":"symbol","rawIndexableTextContent":"Writes a Renderable to stdout. ","title":"write(_:)","summary":"Writes a Renderable to stdout.","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/write(_:)","interfaceLanguage":"swift"}}},{"summary":"","rawIndexableTextContent":" ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/colors"},"type":"topLevelPage"},"kind":"symbol","title":"colors","headings":[]},{"headings":[],"kind":"symbol","summary":"Inherited from OptionSet.init().","rawIndexableTextContent":"Inherited from OptionSet.init(). ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/init()","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"init()"},{"title":"RenderOptions","headings":[],"rawIndexableTextContent":"Options used when rendering a Renderable instance. ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/RenderOptions"}},"kind":"symbol","summary":"Options used when rendering a Renderable instance."},{"rawIndexableTextContent":"","kind":"article","title":"Equatable Implementations","summary":"","headings":[],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement\/Equatable-Implementations","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"summary":"Inherited from Equatable.!=(_:_:).","kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/!=(_:_:)"}},"headings":[],"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","title":"!=(_:_:)"},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/noColor","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[],"title":"ColorSystem.noColor","rawIndexableTextContent":" ","kind":"symbol","summary":""},{"summary":"A console capable of rendering Renderableobjects to stdout.","title":"Console","rawIndexableTextContent":"A console capable of rendering Renderableobjects to stdout. ","kind":"symbol","headings":[],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console"}}},{"rawIndexableTextContent":"Inherited from Sequence.split(separator:maxSplits:omittingEmptySubsequences:). ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/split(separator:maxSplits:omittingEmptySubsequences:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.split(separator:maxSplits:omittingEmptySubsequences:).","title":"split(separator:maxSplits:omittingEmptySubsequences:)","headings":[],"kind":"symbol"},{"title":"enumerated()","rawIndexableTextContent":"Inherited from Sequence.enumerated(). ","summary":"Inherited from Sequence.enumerated().","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/enumerated()","interfaceLanguage":"swift"}},"kind":"symbol"},{"kind":"symbol","rawIndexableTextContent":"Inherited from OptionSet.symmetricDifference(_:). ","summary":"Inherited from OptionSet.symmetricDifference(_:).","headings":[],"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/symmetricDifference(_:)"},"type":"topLevelPage"},"title":"symmetricDifference(_:)"},{"rawIndexableTextContent":"Inherited from Sequence.sorted(using:). ","summary":"Inherited from Sequence.sorted(using:).","headings":[],"title":"sorted(using:)","platforms":[{"beta":false,"name":"iOS","deprecated":false,"introducedAt":"15.0","unavailable":false},{"name":"macOS","introducedAt":"12.0","unavailable":false,"beta":false,"deprecated":false},{"deprecated":false,"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"15.0"},{"unavailable":false,"deprecated":false,"introducedAt":"8.0","beta":false,"name":"watchOS"}],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/sorted(using:)-7w7b0","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol"},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","headings":[],"title":"!=(_:_:)","summary":"Inherited from Equatable.!=(_:_:).","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/!=(_:_:)"},"type":"topLevelPage"}},{"title":"Paragraph","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Widget that renders styled text and auto wraps at line breaks as needed.","headings":[],"rawIndexableTextContent":"Widget that renders styled text and auto wraps at line breaks as needed. "},{"headings":["Return Value"],"title":"parse(_:)","rawIndexableTextContent":"Converts the string representation of a style to it’s Style equivalent.  The string containing the style to parse. Return Value A Style equivalent of the text contained in the provided text.","kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/parse(_:)"}},"summary":"Converts the string representation of a style to it’s Style equivalent."},{"rawIndexableTextContent":"Inherited from Sequence.sorted(using:). ","kind":"symbol","summary":"Inherited from Sequence.sorted(using:).","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/sorted(using:)-8ie2p","interfaceLanguage":"swift"}},"title":"sorted(using:)","headings":[],"platforms":[{"introducedAt":"15.0","deprecated":false,"name":"iOS","beta":false,"unavailable":false},{"deprecated":false,"beta":false,"unavailable":false,"introducedAt":"12.0","name":"macOS"},{"name":"tvOS","beta":false,"introducedAt":"15.0","deprecated":false,"unavailable":false},{"introducedAt":"8.0","deprecated":false,"unavailable":false,"beta":false,"name":"watchOS"}]},{"rawIndexableTextContent":"Measures the object.  The render options. The maximum allowed width. Return Value The minimum and maximum width of the object.","title":"measure(options:maxWidth:)","headings":["Return Value"],"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderable\/measure(options:maxWidth:)"},"type":"topLevelPage"},"kind":"symbol","summary":"Measures the object."},{"title":"suffix(_:)","summary":"Inherited from Sequence.suffix(_:).","headings":[],"kind":"symbol","rawIndexableTextContent":"Inherited from Sequence.suffix(_:). ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/suffix(_:)"}}},{"summary":"Swaps the foreground and background colors.","rawIndexableTextContent":"Swaps the foreground and background colors. ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/invert","interfaceLanguage":"swift"}},"kind":"symbol","title":"invert","headings":[]},{"title":"slowBlink","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/slowBlink","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[],"kind":"symbol","rawIndexableTextContent":"Makes text blink. Normally less than 150 blinks per minute. ","summary":"Makes text blink. Normally less than 150 blinks per minute."},{"kind":"symbol","summary":"Inherited from Sequence.lexicographicallyPrecedes(_:by:).","title":"lexicographicallyPrecedes(_:by:)","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/lexicographicallyPrecedes(_:by:)"}},"headings":[],"rawIndexableTextContent":"Inherited from Sequence.lexicographicallyPrecedes(_:by:). "},{"kind":"symbol","title":"write(_:)","summary":"Writes a Renderableto the console.","headings":[],"rawIndexableTextContent":"Writes a Renderableto the console. ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderer\/write(_:)","interfaceLanguage":"swift"}}},{"rawIndexableTextContent":" ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/number(_:)"}},"title":"Color.number(_:)","kind":"symbol","summary":"","headings":[]},{"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color"}},"title":"Color","rawIndexableTextContent":"Represents a color ","summary":"Represents a color","kind":"symbol","headings":[]},{"kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/max(by:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from Sequence.max(by:).","headings":[],"title":"max(by:)","rawIndexableTextContent":"Inherited from Sequence.max(by:). "},{"rawIndexableTextContent":"Represents a segment of text, whitespace, line breaks, or terminal control sequences ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment","interfaceLanguage":"swift"}},"title":"Segment","kind":"symbol","headings":[],"summary":"Represents a segment of text, whitespace, line breaks, or terminal control sequences"},{"rawIndexableTextContent":"Inherited from OptionSet.formIntersection(_:). ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/formIntersection(_:)"},"type":"topLevelPage"},"title":"formIntersection(_:)","kind":"symbol","summary":"Inherited from OptionSet.formIntersection(_:).","headings":[]},{"kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/splitLines(maxWidth:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[],"title":"splitLines(maxWidth:)","summary":"","rawIndexableTextContent":" "},{"kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/plain","interfaceLanguage":"swift"},"type":"topLevelPage"},"rawIndexableTextContent":"A Style with the default colors and without text decoration ","summary":"A Style with the default colors and without text decoration","headings":[],"title":"plain"},{"kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/filter(_:)-77rlw","interfaceLanguage":"swift"}},"title":"filter(_:)","headings":[],"summary":"Inherited from Sequence.filter(_:).","rawIndexableTextContent":"Inherited from Sequence.filter(_:). "},{"kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Markup\/measure(options:maxWidth:)","interfaceLanguage":"swift"}},"summary":"Inherited from Renderable.measure(options:maxWidth:).","headings":[],"rawIndexableTextContent":"Inherited from Renderable.measure(options:maxWidth:). ","title":"measure(options:maxWidth:)"},{"headings":[],"summary":"Inherited from Error.localizedDescription.","title":"localizedDescription","rawIndexableTextContent":"Inherited from Error.localizedDescription. ","platforms":[{"introducedAt":"8.0","deprecated":false,"name":"iOS","unavailable":false,"beta":false},{"unavailable":false,"name":"macOS","beta":false,"deprecated":false,"introducedAt":"10.10"},{"introducedAt":"9.0","beta":false,"name":"tvOS","unavailable":false,"deprecated":false},{"beta":false,"deprecated":false,"name":"watchOS","introducedAt":"2.0","unavailable":false}],"kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/localizedDescription"},"type":"topLevelPage"}},{"kind":"symbol","headings":[],"rawIndexableTextContent":"Inherited from Sequence.shuffled(using:). ","title":"shuffled(using:)","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/shuffled(using:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.shuffled(using:)."},{"kind":"symbol","rawIndexableTextContent":"Represents something that can be  rendered to the terminal. ","summary":"Represents something that can be  rendered to the terminal.","headings":[],"title":"Renderable","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderable","interfaceLanguage":"swift"}}},{"headings":[],"rawIndexableTextContent":"Underlined text. ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/underline"}},"kind":"symbol","summary":"Underlined text.","title":"underline"},{"rawIndexableTextContent":"Inherited from Sequence.compare(_:_:). ","headings":[],"kind":"symbol","platforms":[{"deprecated":false,"name":"iOS","unavailable":false,"introducedAt":"15.0","beta":false},{"introducedAt":"12.0","beta":false,"deprecated":false,"name":"macOS","unavailable":false},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"15.0","name":"tvOS"},{"unavailable":false,"beta":false,"name":"watchOS","introducedAt":"8.0","deprecated":false}],"title":"compare(_:_:)","summary":"Inherited from Sequence.compare(_:_:).","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/compare(_:_:)","interfaceLanguage":"swift"}}},{"title":"init(_:)","kind":"symbol","rawIndexableTextContent":"Inherited from SetAlgebra.init(_:). ","headings":[],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/init(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from SetAlgebra.init(_:)."},{"title":"isSuperset(of:)","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isSuperset(of:)"},"type":"topLevelPage"},"headings":[],"kind":"symbol","summary":"Inherited from SetAlgebra.isSuperset(of:).","rawIndexableTextContent":"Inherited from SetAlgebra.isSuperset(of:). "},{"title":"SegmentLineIterator","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","headings":[],"summary":"An iterator that iterates over SegmentLine’s emitting line breaks as needed.","rawIndexableTextContent":"An iterator that iterates over SegmentLine’s emitting line breaks as needed. "},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/dropLast(_:)"},"type":"topLevelPage"},"headings":[],"kind":"symbol","title":"dropLast(_:)","summary":"Inherited from Sequence.dropLast(_:).","rawIndexableTextContent":"Inherited from Sequence.dropLast(_:). "},{"summary":"","title":"Color.default","kind":"symbol","headings":[],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/default"}},"rawIndexableTextContent":" "},{"title":"contains(where:)","summary":"Inherited from Sequence.contains(where:).","kind":"symbol","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/contains(where:)","interfaceLanguage":"swift"}},"rawIndexableTextContent":"Inherited from Sequence.contains(where:). "},{"rawIndexableTextContent":"More than one foreground was provided ","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/multipleForegrounds","interfaceLanguage":"swift"}},"summary":"More than one foreground was provided","kind":"symbol","title":"StyleParserError.multipleForegrounds"},{"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError"}},"kind":"symbol","headings":[],"rawIndexableTextContent":"Represents an error that can occur during style parsing. ","title":"StyleParserError","summary":"Represents an error that can occur during style parsing."},{"title":"isStrictSuperset(of:)","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isStrictSuperset(of:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from SetAlgebra.isStrictSuperset(of:).","headings":[],"rawIndexableTextContent":"Inherited from SetAlgebra.isStrictSuperset(of:). "},{"rawIndexableTextContent":"Inherited from Sequence.shuffled(). ","kind":"symbol","headings":[],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/shuffled()","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from Sequence.shuffled().","title":"shuffled()"},{"rawIndexableTextContent":"Shows text with a horizontal line through the center. ","kind":"symbol","summary":"Shows text with a horizontal line through the center.","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/strikethrough"}},"headings":[],"title":"strikethrough"},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/Equatable-Implementations","interfaceLanguage":"swift"}},"kind":"article","summary":"","rawIndexableTextContent":"","title":"Equatable Implementations","headings":[]},{"rawIndexableTextContent":"More than one background was provided ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/multipleBackground"}},"title":"StyleParserError.multipleBackground","kind":"symbol","headings":[],"summary":"More than one background was provided"},{"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/rgb(_:_:_:)"}},"kind":"symbol","summary":"","headings":[],"title":"Color.rgb(_:_:_:)","rawIndexableTextContent":" "},{"title":"init(lines:)","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/init(lines:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"","headings":[],"rawIndexableTextContent":" "},{"rawIndexableTextContent":"The minimum width ","summary":"The minimum width","kind":"symbol","title":"min","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement\/min","interfaceLanguage":"swift"}}},{"rawIndexableTextContent":"Inherited from Renderable.measure(options:maxWidth:). ","summary":"Inherited from Renderable.measure(options:maxWidth:).","title":"measure(options:maxWidth:)","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/measure(options:maxWidth:)"},"type":"topLevelPage"},"headings":[]},{"kind":"symbol","headings":[],"rawIndexableTextContent":"Inherited from Sequence.map(_:). ","summary":"Inherited from Sequence.map(_:).","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/map(_:)"}},"title":"map(_:)"},{"headings":[],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/union(_:)"}},"title":"union(_:)","rawIndexableTextContent":"Inherited from OptionSet.union(_:). ","summary":"Inherited from OptionSet.union(_:).","kind":"symbol"},{"kind":"symbol","rawIndexableTextContent":" ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/init(text:style:)"}},"title":"init(text:style:)","summary":"","headings":[]},{"headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/isDefault","interfaceLanguage":"swift"}},"title":"isDefault","kind":"symbol","rawIndexableTextContent":"Returns whether or not the color is a default color. ","summary":"Returns whether or not the color is a default color."},{"headings":[],"kind":"symbol","title":"first(where:)","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/first(where:)"}},"summary":"Inherited from Sequence.first(where:).","rawIndexableTextContent":"Inherited from Sequence.first(where:). "},{"kind":"symbol","headings":[],"rawIndexableTextContent":"Inherited from Sequence.drop(while:). ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/drop(while:)"},"type":"topLevelPage"},"summary":"Inherited from Sequence.drop(while:).","title":"drop(while:)"},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/trueColor","interfaceLanguage":"swift"}},"headings":[],"kind":"symbol","title":"ColorSystem.trueColor","summary":"","rawIndexableTextContent":" "},{"kind":"symbol","summary":"Inherited from OptionSet.contains(_:).","rawIndexableTextContent":"Inherited from OptionSet.contains(_:). ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/contains(_:)"}},"title":"contains(_:)","headings":[]},{"kind":"symbol","summary":"Combines this style with another one.","rawIndexableTextContent":"Combines this style with another one.  The style to combine with this one Return Value A new style representing the combination of this style and the other one.","headings":["Return Value"],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/combine(style:)","interfaceLanguage":"swift"}},"title":"combine(style:)"},{"kind":"article","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/OptionSet-Implementations"},"type":"topLevelPage"},"summary":"","headings":[],"rawIndexableTextContent":"","title":"OptionSet Implementations"},{"headings":[],"title":"!=(_:_:)","summary":"Inherited from Equatable.!=(_:_:).","rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/!=(_:_:)","interfaceLanguage":"swift"}},"kind":"symbol"},{"rawIndexableTextContent":"Renders the object into segments.  The render options. The maximum allowed width. Return Value An array of segments.","title":"render(options:maxWidth:)","summary":"Renders the object into segments.","headings":["Return Value"],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderable\/render(options:maxWidth:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol"},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/SetAlgebra-Implementations"},"type":"topLevelPage"},"summary":"","title":"SetAlgebra Implementations","headings":[],"rawIndexableTextContent":"","kind":"article"},{"kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/conceal"}},"title":"conceal","summary":"Hides the text.","headings":[],"rawIndexableTextContent":"Hides the text. "},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/system","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","title":"system","summary":"Gets the ColorSystem that this color belongs to.","headings":[],"rawIndexableTextContent":"Gets the ColorSystem that this color belongs to. "},{"rawIndexableTextContent":"Inherited from OptionSet.init(rawValue:). ","summary":"Inherited from OptionSet.init(rawValue:).","kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/init(rawValue:)"}},"title":"init(rawValue:)","headings":[]},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/rapidBlink"},"type":"topLevelPage"},"kind":"symbol","summary":"Makes text blink. Normally more than 150 blinks per minute.","title":"rapidBlink","headings":[],"rawIndexableTextContent":"Makes text blink. Normally more than 150 blinks per minute. "},{"headings":[],"summary":"","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/Equatable-Implementations","interfaceLanguage":"swift"}},"rawIndexableTextContent":"","title":"Equatable Implementations","kind":"article"},{"kind":"symbol","headings":[],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/rawValue"}},"title":"rawValue","summary":"Inherited from RawRepresentable.rawValue.","rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. "},{"title":"prefix(while:)","headings":[],"rawIndexableTextContent":"Inherited from Sequence.prefix(while:). ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/prefix(while:)"}},"kind":"symbol","summary":"Inherited from Sequence.prefix(while:)."},{"title":"init(arrayLiteral:)","rawIndexableTextContent":"Inherited from SetAlgebra.init(arrayLiteral:). ","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/init(arrayLiteral:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.init(arrayLiteral:).","headings":[]},{"kind":"symbol","rawIndexableTextContent":"A segment containing text with an optional style.  The text content. The text’s style (optional).","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/text(content:style:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[],"title":"Segment.text(content:style:)","summary":"A segment containing text with an optional style."},{"rawIndexableTextContent":"Inherited from Sequence.reduce(_:_:). ","summary":"Inherited from Sequence.reduce(_:_:).","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/reduce(_:_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[],"title":"reduce(_:_:)","kind":"symbol"},{"headings":[],"kind":"symbol","rawIndexableTextContent":"Inherited from SetAlgebra.isEmpty. ","summary":"Inherited from SetAlgebra.isEmpty.","title":"isEmpty","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isEmpty"},"type":"topLevelPage"}},{"summary":"The text decoration.","headings":[],"rawIndexableTextContent":"The text decoration. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/decoration","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"decoration","kind":"symbol"},{"summary":"A Swift framework that makes it easier to create beautiful console applications.","title":"SpectreKit","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit"}},"kind":"symbol","headings":[],"rawIndexableTextContent":"A Swift framework that makes it easier to create beautiful console applications."},{"summary":"Inherited from Sequence.formatted(_:).","platforms":[{"deprecated":false,"unavailable":false,"name":"iOS","introducedAt":"15.0","beta":false},{"introducedAt":"12.0","unavailable":false,"name":"macOS","beta":false,"deprecated":false},{"deprecated":false,"beta":false,"name":"tvOS","unavailable":false,"introducedAt":"15.0"},{"deprecated":false,"unavailable":false,"name":"watchOS","beta":false,"introducedAt":"8.0"}],"title":"formatted(_:)","kind":"symbol","headings":[],"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/formatted(_:)"},"type":"topLevelPage"},"rawIndexableTextContent":"Inherited from Sequence.formatted(_:). "},{"rawIndexableTextContent":"Inherited from SetAlgebra.subtracting(_:). ","summary":"Inherited from SetAlgebra.subtracting(_:).","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/subtracting(_:)"}},"title":"subtracting(_:)","kind":"symbol","headings":[]},{"rawIndexableTextContent":"Inherited from Sequence.dropFirst(_:). ","title":"dropFirst(_:)","kind":"symbol","summary":"Inherited from Sequence.dropFirst(_:).","headings":[],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/dropFirst(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"kind":"symbol","rawIndexableTextContent":"Inherited from SetAlgebra.isSubset(of:). ","summary":"Inherited from SetAlgebra.isSubset(of:).","headings":[],"title":"isSubset(of:)","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isSubset(of:)"}}},{"summary":"Represents a color system","headings":[],"rawIndexableTextContent":"Represents a color system ","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"ColorSystem"},{"rawIndexableTextContent":" ","summary":"","kind":"symbol","headings":[],"title":"init(_:style:)","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Markup\/init(_:style:)","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"title":"formUnion(_:)","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/formUnion(_:)","interfaceLanguage":"swift"}},"headings":[],"summary":"Inherited from OptionSet.formUnion(_:).","rawIndexableTextContent":"Inherited from OptionSet.formUnion(_:). "},{"summary":"Appends text with an optional style to the paragraph.","title":"append(text:style:)","headings":[],"rawIndexableTextContent":"Appends text with an optional style to the paragraph.  The text to add The text’s style","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/append(text:style:)"}},"kind":"symbol"},{"kind":"symbol","summary":"Inherited from Sequence.prefix(_:).","rawIndexableTextContent":"Inherited from Sequence.prefix(_:). ","headings":[],"title":"prefix(_:)","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/prefix(_:)"}}},{"title":"Equatable Implementations","summary":"","headings":[],"kind":"article","rawIndexableTextContent":"","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/Equatable-Implementations","interfaceLanguage":"swift"}}},{"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/makeIterator()"}},"rawIndexableTextContent":"Inherited from Sequence.makeIterator(). ","title":"makeIterator()","summary":"Inherited from Sequence.makeIterator().","headings":[],"kind":"symbol"},{"kind":"symbol","headings":[],"title":"background","summary":"The background color.","rawIndexableTextContent":"The background color. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/background","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"summary":"Inherited from Sequence.contains(_:).","rawIndexableTextContent":"Inherited from Sequence.contains(_:). ","kind":"symbol","title":"contains(_:)","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/contains(_:)","interfaceLanguage":"swift"}},"headings":[]},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isDisjoint(with:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"isDisjoint(with:)","kind":"symbol","rawIndexableTextContent":"Inherited from SetAlgebra.isDisjoint(with:). ","headings":[],"summary":"Inherited from SetAlgebra.isDisjoint(with:)."},{"title":"forEach(_:)","summary":"Inherited from Sequence.forEach(_:).","rawIndexableTextContent":"Inherited from Sequence.forEach(_:). ","kind":"symbol","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/forEach(_:)","interfaceLanguage":"swift"}}},{"rawIndexableTextContent":"Represents color and text decorations. ","summary":"Represents color and text decorations.","title":"Style","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[],"kind":"symbol"},{"summary":"","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/eightBit"}},"headings":[],"rawIndexableTextContent":" ","kind":"symbol","title":"ColorSystem.eightBit"},{"kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/allSatisfy(_:)"}},"headings":[],"title":"allSatisfy(_:)","summary":"Inherited from Sequence.allSatisfy(_:).","rawIndexableTextContent":"Inherited from Sequence.allSatisfy(_:). "},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/standard","interfaceLanguage":"swift"}},"summary":"","headings":[],"kind":"symbol","title":"ColorSystem.standard","rawIndexableTextContent":" "},{"rawIndexableTextContent":"Inherited from IteratorProtocol.next(). ","title":"next()","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/next()","interfaceLanguage":"swift"}},"kind":"symbol","summary":"Inherited from IteratorProtocol.next()."},{"headings":[],"rawIndexableTextContent":"A measurement that has a minimum and maximum value. ","summary":"A measurement that has a minimum and maximum value.","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement","interfaceLanguage":"swift"}},"title":"Measurement"},{"summary":"Inherited from Sequence.reversed().","title":"reversed()","headings":[],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/reversed()"}},"rawIndexableTextContent":"Inherited from Sequence.reversed(). ","kind":"symbol"},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/update(with:)"},"type":"topLevelPage"},"rawIndexableTextContent":"Inherited from OptionSet.update(with:). ","headings":[],"kind":"symbol","title":"update(with:)","summary":"Inherited from OptionSet.update(with:)."},{"rawIndexableTextContent":"","title":"Sequence Implementations","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/Sequence-Implementations","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"article","summary":"","headings":[]},{"title":"Renderer","summary":"Represents something that can render Renderable objects.","rawIndexableTextContent":"Represents something that can render Renderable objects. ","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderer","interfaceLanguage":"swift"}},"headings":[]},{"rawIndexableTextContent":" ","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/init()"},"type":"topLevelPage"},"summary":"","title":"init()","headings":[]},{"headings":[],"title":"foreground","summary":"The foreground color.","rawIndexableTextContent":"The foreground color. ","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/foreground","interfaceLanguage":"swift"}}},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/!=(_:_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","title":"!=(_:_:)","summary":"Inherited from Equatable.!=(_:_:).","headings":[],"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). "},{"rawIndexableTextContent":" ","title":"init(foreground:background:decoration:)","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/init(foreground:background:decoration:)","interfaceLanguage":"swift"}},"summary":"","headings":[]},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement\/max","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"The maximum width","title":"max","kind":"symbol","headings":[],"rawIndexableTextContent":"The maximum width "},{"kind":"symbol","summary":"Represents text decoration. Support for text decorations are up to the terminal.","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"Decoration","headings":[],"rawIndexableTextContent":"Represents text decoration. Support for text decorations are up to the terminal. "},{"summary":"Inherited from Sequence.lazy.","rawIndexableTextContent":"Inherited from Sequence.lazy. ","title":"lazy","kind":"symbol","headings":[],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/lazy","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/compactMap(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","title":"compactMap(_:)","headings":[],"summary":"Inherited from Sequence.compactMap(_:).","rawIndexableTextContent":"Inherited from Sequence.compactMap(_:). "},{"rawIndexableTextContent":"","title":"Equatable Implementations","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/Equatable-Implementations"},"type":"topLevelPage"},"kind":"article","summary":"","headings":[]},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/min(by:)"},"type":"topLevelPage"},"kind":"symbol","rawIndexableTextContent":"Inherited from Sequence.min(by:). ","summary":"Inherited from Sequence.min(by:).","title":"min(by:)","headings":[]},{"headings":[],"kind":"symbol","summary":"Inherited from Sequence.starts(with:).","title":"starts(with:)","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/starts(with:)"},"type":"topLevelPage"},"rawIndexableTextContent":"Inherited from Sequence.starts(with:). "},{"kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/insert(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from OptionSet.insert(_:).","headings":[],"rawIndexableTextContent":"Inherited from OptionSet.insert(_:). ","title":"insert(_:)"},{"kind":"symbol","summary":"Inherited from SetAlgebra.isStrictSubset(of:).","title":"isStrictSubset(of:)","rawIndexableTextContent":"Inherited from SetAlgebra.isStrictSubset(of:). ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isStrictSubset(of:)","interfaceLanguage":"swift"}},"headings":[]},{"headings":[],"rawIndexableTextContent":"Inherited from Sequence.underestimatedCount. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/underestimatedCount","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","title":"underestimatedCount","summary":"Inherited from Sequence.underestimatedCount."},{"title":"withContiguousStorageIfAvailable(_:)","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/withContiguousStorageIfAvailable(_:)","interfaceLanguage":"swift"}},"headings":[],"rawIndexableTextContent":"Inherited from Sequence.withContiguousStorageIfAvailable(_:). ","kind":"symbol","summary":"Inherited from Sequence.withContiguousStorageIfAvailable(_:)."},{"title":"init()","summary":"","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/init()"},"type":"topLevelPage"},"rawIndexableTextContent":" ","headings":[]},{"summary":"A segment containing whitespace.","kind":"symbol","rawIndexableTextContent":"A segment containing whitespace.  The whitespace content.","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/whitespace(content:)","interfaceLanguage":"swift"}},"title":"Segment.whitespace(content:)","headings":[]},{"headings":[],"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/Equatable-Implementations"},"type":"topLevelPage"},"title":"Equatable Implementations","rawIndexableTextContent":"","summary":"","kind":"article"},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement\/!=(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Equatable.!=(_:_:).","headings":[],"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","title":"!=(_:_:)","kind":"symbol"},{"title":"Equatable Implementations","summary":"","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/Equatable-Implementations","interfaceLanguage":"swift"}},"rawIndexableTextContent":"","kind":"article"},{"summary":"Inherited from SetAlgebra.subtract(_:).","headings":[],"rawIndexableTextContent":"Inherited from SetAlgebra.subtract(_:). ","kind":"symbol","title":"subtract(_:)","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/subtract(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/controlSequence(code:)"},"type":"topLevelPage"},"kind":"symbol","title":"Segment.controlSequence(code:)","summary":"A segment containing a control sequence code.","headings":[],"rawIndexableTextContent":"A segment containing a control sequence code.  The control sequence code"},{"title":"render(options:maxWidth:)","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/render(options:maxWidth:)"}},"summary":"Inherited from Renderable.render(options:maxWidth:).","headings":[],"rawIndexableTextContent":"Inherited from Renderable.render(options:maxWidth:). ","kind":"symbol"},{"kind":"symbol","headings":[],"rawIndexableTextContent":"Inherited from Sequence.publisher. ","summary":"Inherited from Sequence.publisher.","title":"publisher","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/publisher","interfaceLanguage":"swift"},"type":"topLevelPage"},"platforms":[{"unavailable":false,"beta":false,"introducedAt":"13.0","deprecated":false,"name":"iOS"},{"beta":false,"deprecated":false,"introducedAt":"10.15","name":"macOS","unavailable":false},{"name":"tvOS","beta":false,"unavailable":false,"deprecated":false,"introducedAt":"13.0"},{"deprecated":false,"unavailable":false,"name":"watchOS","introducedAt":"6.0","beta":false}]},{"platforms":[],"summary":"Inherited from Sequence.flatMap(_:).","headings":[],"kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/flatMap(_:)-728bt"},"type":"topLevelPage"},"title":"flatMap(_:)","rawIndexableTextContent":"Inherited from Sequence.flatMap(_:). "},{"kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/starts(with:by:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.starts(with:by:).","title":"starts(with:by:)","headings":[],"rawIndexableTextContent":"Inherited from Sequence.starts(with:by:). "},{"summary":"Inherited from OptionSet.intersection(_:).","headings":[],"rawIndexableTextContent":"Inherited from OptionSet.intersection(_:). ","title":"intersection(_:)","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/intersection(_:)"}},"kind":"symbol"},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/elementsEqual(_:by:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.elementsEqual(_:by:).","title":"elementsEqual(_:by:)","headings":[],"kind":"symbol","rawIndexableTextContent":"Inherited from Sequence.elementsEqual(_:by:). "},{"kind":"symbol","headings":[],"title":"flatMap(_:)","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/flatMap(_:)-45m9s","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.flatMap(_:).","rawIndexableTextContent":"Inherited from Sequence.flatMap(_:). "},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/dim"},"type":"topLevelPage"},"summary":"Dim or faint text.","rawIndexableTextContent":"Dim or faint text. ","headings":[],"title":"dim","kind":"symbol"},{"summary":"Inherited from Sequence.elementsEqual(_:).","headings":[],"rawIndexableTextContent":"Inherited from Sequence.elementsEqual(_:). ","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/elementsEqual(_:)","interfaceLanguage":"swift"}},"title":"elementsEqual(_:)"},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Markup"},"type":"topLevelPage"},"kind":"symbol","rawIndexableTextContent":"Widget that renders markup text ","summary":"Widget that renders markup text","title":"Markup","headings":[]},{"headings":[],"rawIndexableTextContent":"Inherited from Sequence.split(maxSplits:omittingEmptySubsequences:whereSeparator:). ","summary":"Inherited from Sequence.split(maxSplits:omittingEmptySubsequences:whereSeparator:).","title":"split(maxSplits:omittingEmptySubsequences:whereSeparator:)","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)"}},"kind":"symbol"},{"summary":"Converts the color to another ColorSystem.","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/convert(to:)","interfaceLanguage":"swift"}},"rawIndexableTextContent":"Converts the color to another ColorSystem. ","kind":"symbol","title":"convert(to:)"},{"rawIndexableTextContent":"Inherited from OptionSet.remove(_:). ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/remove(_:)"}},"kind":"symbol","summary":"Inherited from OptionSet.remove(_:).","title":"remove(_:)","headings":[]},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/empty"},"type":"topLevelPage"},"kind":"symbol","headings":[],"title":"Segment.empty","rawIndexableTextContent":"An empty segment. ","summary":"An empty segment."},{"rawIndexableTextContent":"Inherited from Sequence.sorted(by:). ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/sorted(by:)"},"type":"topLevelPage"},"title":"sorted(by:)","kind":"symbol","summary":"Inherited from Sequence.sorted(by:).","headings":[]},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/reduce(into:_:)"},"type":"topLevelPage"},"kind":"symbol","rawIndexableTextContent":"Inherited from Sequence.reduce(into:_:). ","title":"reduce(into:_:)","summary":"Inherited from Sequence.reduce(into:_:).","headings":[]},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/!=(_:_:)","interfaceLanguage":"swift"}},"title":"!=(_:_:)","headings":[],"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","summary":"Inherited from Equatable.!=(_:_:)."},{"headings":[],"title":"filter(_:)","summary":"Inherited from Sequence.filter(_:).","kind":"symbol","platforms":[{"unavailable":false,"introducedAt":"17.0","name":"iOS","beta":false,"deprecated":false},{"unavailable":false,"name":"macOS","beta":false,"introducedAt":"14.0","deprecated":false},{"name":"tvOS","beta":false,"unavailable":false,"deprecated":false,"introducedAt":"17.0"},{"name":"watchOS","introducedAt":"10.0","beta":false,"deprecated":false,"unavailable":false}],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/filter(_:)-6zeap"}},"rawIndexableTextContent":"Inherited from Sequence.filter(_:). "}]