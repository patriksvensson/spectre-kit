[{"rawIndexableTextContent":" ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/TerminalType\/tty"}},"headings":[],"kind":"symbol","title":"TerminalType.tty","summary":""},{"title":"!=(_:_:)","headings":[],"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/!=(_:_:)"},"type":"topLevelPage"},"kind":"symbol","summary":"Inherited from Equatable.!=(_:_:).","rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). "},{"headings":[],"summary":"","rawIndexableTextContent":" ","title":"ColorSystem.eightBit","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/eightBit"},"type":"topLevelPage"}},{"headings":[],"rawIndexableTextContent":"Inherited from Sequence.lazy. ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/lazy"},"type":"topLevelPage"},"kind":"symbol","summary":"Inherited from Sequence.lazy.","title":"lazy"},{"rawIndexableTextContent":"An iterator that iterates over SegmentLine’s emitting line breaks as needed. ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator","interfaceLanguage":"swift"}},"title":"SegmentLineIterator","summary":"An iterator that iterates over SegmentLine’s emitting line breaks as needed.","headings":[],"kind":"symbol"},{"title":"TerminalType.dumb","headings":[],"summary":"","kind":"symbol","rawIndexableTextContent":" ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/TerminalType\/dumb"}}},{"headings":[],"title":"SegmentLineIterator.Element","rawIndexableTextContent":"Inherited from IteratorProtocol.Element. ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/Element"}},"summary":"Inherited from IteratorProtocol.Element.","kind":"symbol"},{"title":"isSubset(of:)","summary":"Inherited from SetAlgebra.isSubset(of:).","rawIndexableTextContent":"Inherited from SetAlgebra.isSubset(of:). ","kind":"symbol","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isSubset(of:)","interfaceLanguage":"swift"}}},{"kind":"symbol","summary":"Represents a color","headings":[],"rawIndexableTextContent":"Represents a color ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color"},"type":"topLevelPage"},"title":"Color"},{"title":"contains(_:)","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/contains(_:)"},"type":"topLevelPage"},"summary":"Inherited from OptionSet.contains(_:).","headings":[],"rawIndexableTextContent":"Inherited from OptionSet.contains(_:). "},{"summary":"","headings":[],"kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/init(lines:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"init(lines:)","rawIndexableTextContent":" "},{"title":"isSuperset(of:)","kind":"symbol","headings":[],"summary":"Inherited from SetAlgebra.isSuperset(of:).","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isSuperset(of:)","interfaceLanguage":"swift"}},"rawIndexableTextContent":"Inherited from SetAlgebra.isSuperset(of:). "},{"summary":"Inherited from OptionSet.remove(_:).","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/remove(_:)"},"type":"topLevelPage"},"headings":[],"title":"remove(_:)","kind":"symbol","rawIndexableTextContent":"Inherited from OptionSet.remove(_:). "},{"title":"system","headings":[],"rawIndexableTextContent":"Gets the ColorSystem that this color belongs to. ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/system"}},"kind":"symbol","summary":"Gets the ColorSystem that this color belongs to."},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/!=(_:_:)","interfaceLanguage":"swift"}},"kind":"symbol","title":"!=(_:_:)","summary":"Inherited from Equatable.!=(_:_:).","headings":[],"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). "},{"kind":"symbol","rawIndexableTextContent":"Inherited from RawRepresentable.rawValue. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/rawValue","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from RawRepresentable.rawValue.","headings":[],"title":"rawValue"},{"title":"enumerated()","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/enumerated()","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from Sequence.enumerated().","headings":[],"kind":"symbol","rawIndexableTextContent":"Inherited from Sequence.enumerated(). "},{"title":"convert(to:)","summary":"Converts the color to another ColorSystem.","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/convert(to:)","interfaceLanguage":"swift"}},"rawIndexableTextContent":"Converts the color to another ColorSystem. ","kind":"symbol"},{"summary":"Widget that renders styled text and auto wraps at line breaks as needed.","headings":[],"rawIndexableTextContent":"Widget that renders styled text and auto wraps at line breaks as needed. ","kind":"symbol","title":"Paragraph","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"rawIndexableTextContent":"Represents something that can render Renderable objects. ","kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderer"}},"headings":[],"title":"Renderer","summary":"Represents something that can render Renderable objects."},{"headings":[],"title":"StyleParserError.multipleForegrounds","summary":"More than one foreground was provided","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/multipleForegrounds"}},"rawIndexableTextContent":"More than one foreground was provided ","kind":"symbol"},{"summary":"Represents a line of terminal segments.","headings":[],"kind":"symbol","rawIndexableTextContent":"Represents a line of terminal segments. ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLine","interfaceLanguage":"swift"}},"title":"SegmentLine"},{"summary":"Widget that renders markup text","rawIndexableTextContent":"Widget that renders markup text ","kind":"symbol","title":"Markup","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Markup","interfaceLanguage":"swift"}},"headings":[]},{"kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/split(separator:maxSplits:omittingEmptySubsequences:)","interfaceLanguage":"swift"}},"rawIndexableTextContent":"Inherited from Sequence.split(separator:maxSplits:omittingEmptySubsequences:). ","summary":"Inherited from Sequence.split(separator:maxSplits:omittingEmptySubsequences:).","title":"split(separator:maxSplits:omittingEmptySubsequences:)","headings":[]},{"headings":[],"title":"makeIterator()","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/makeIterator()"}},"kind":"symbol","summary":"Inherited from Sequence.makeIterator().","rawIndexableTextContent":"Inherited from Sequence.makeIterator(). "},{"summary":"Inherited from Equatable.!=(_:_:).","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/!=(_:_:)","interfaceLanguage":"swift"}},"title":"!=(_:_:)","kind":"symbol","rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","headings":[]},{"summary":"Inherited from OptionSet.update(with:).","title":"update(with:)","headings":[],"kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/update(with:)"}},"rawIndexableTextContent":"Inherited from OptionSet.update(with:). "},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/formatted(_:)","interfaceLanguage":"swift"}},"rawIndexableTextContent":"Inherited from Sequence.formatted(_:). ","title":"formatted(_:)","platforms":[{"beta":false,"deprecated":false,"introducedAt":"15.0","name":"iOS","unavailable":false},{"name":"macOS","introducedAt":"12.0","deprecated":false,"unavailable":false,"beta":false},{"name":"tvOS","deprecated":false,"introducedAt":"15.0","beta":false,"unavailable":false},{"name":"watchOS","deprecated":false,"unavailable":false,"beta":false,"introducedAt":"8.0"}],"summary":"Inherited from Sequence.formatted(_:).","headings":[],"kind":"symbol"},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/reversed()","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from Sequence.reversed().","headings":[],"kind":"symbol","title":"reversed()","rawIndexableTextContent":"Inherited from Sequence.reversed(). "},{"headings":[],"title":"dropFirst(_:)","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/dropFirst(_:)"},"type":"topLevelPage"},"summary":"Inherited from Sequence.dropFirst(_:).","rawIndexableTextContent":"Inherited from Sequence.dropFirst(_:). "},{"rawIndexableTextContent":"A segment containing text with an optional style.  The text content. The text’s style (optional).","title":"Segment.text(content:style:)","summary":"A segment containing text with an optional style.","kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/text(content:style:)"}},"headings":[]},{"title":"reduce(into:_:)","headings":[],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/reduce(into:_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"rawIndexableTextContent":"Inherited from Sequence.reduce(into:_:). ","kind":"symbol","summary":"Inherited from Sequence.reduce(into:_:)."},{"kind":"symbol","title":"Color.rgb(_:_:_:)","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/rgb(_:_:_:)","interfaceLanguage":"swift"}},"rawIndexableTextContent":" ","headings":[],"summary":""},{"kind":"symbol","title":"render(options:maxWidth:)","summary":"Inherited from Renderable.render(options:maxWidth:).","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/render(options:maxWidth:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"rawIndexableTextContent":"Inherited from Renderable.render(options:maxWidth:). ","headings":[]},{"title":"parse(_:)","summary":"Converts the string representation of a style to it’s Style equivalent.","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/parse(_:)"}},"kind":"symbol","headings":["Return Value"],"rawIndexableTextContent":"Converts the string representation of a style to it’s Style equivalent.  The string containing the style to parse. Return Value A Style equivalent of the text contained in the provided text."},{"rawIndexableTextContent":"Hides the text. ","headings":[],"title":"conceal","summary":"Hides the text.","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/conceal"},"type":"topLevelPage"}},{"kind":"symbol","summary":"Makes text blink. Normally more than 150 blinks per minute.","rawIndexableTextContent":"Makes text blink. Normally more than 150 blinks per minute. ","title":"rapidBlink","headings":[],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/rapidBlink"}}},{"summary":"Inherited from Sequence.split(maxSplits:omittingEmptySubsequences:whereSeparator:).","rawIndexableTextContent":"Inherited from Sequence.split(maxSplits:omittingEmptySubsequences:whereSeparator:). ","title":"split(maxSplits:omittingEmptySubsequences:whereSeparator:)","kind":"symbol","headings":[],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/split(maxSplits:omittingEmptySubsequences:whereSeparator:)"}}},{"title":"formUnion(_:)","summary":"Inherited from OptionSet.formUnion(_:).","headings":[],"kind":"symbol","rawIndexableTextContent":"Inherited from OptionSet.formUnion(_:). ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/formUnion(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"kind":"symbol","headings":[],"summary":"Inherited from Sequence.sorted(by:).","rawIndexableTextContent":"Inherited from Sequence.sorted(by:). ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/sorted(by:)","interfaceLanguage":"swift"}},"title":"sorted(by:)"},{"summary":"Inherited from Sequence.flatMap(_:).","kind":"symbol","title":"flatMap(_:)","headings":[],"rawIndexableTextContent":"Inherited from Sequence.flatMap(_:). ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/flatMap(_:)-45m9s"},"type":"topLevelPage"}},{"title":"write(_:)","headings":[],"summary":"Writes the specified text to STDOUT.","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Terminal\/write(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","rawIndexableTextContent":"Writes the specified text to STDOUT. "},{"platforms":[{"unavailable":false,"introducedAt":"15.0","name":"iOS","beta":false,"deprecated":false},{"name":"macOS","beta":false,"introducedAt":"12.0","deprecated":false,"unavailable":false},{"name":"tvOS","unavailable":false,"beta":false,"deprecated":false,"introducedAt":"15.0"},{"beta":false,"introducedAt":"8.0","name":"watchOS","unavailable":false,"deprecated":false}],"headings":[],"summary":"Inherited from Sequence.sorted(using:).","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/sorted(using:)-7w7b0"}},"rawIndexableTextContent":"Inherited from Sequence.sorted(using:). ","title":"sorted(using:)","kind":"symbol"},{"title":"insert(_:)","summary":"Inherited from OptionSet.insert(_:).","headings":[],"rawIndexableTextContent":"Inherited from OptionSet.insert(_:). ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/insert(_:)","interfaceLanguage":"swift"}},"kind":"symbol"},{"headings":[],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/Equatable-Implementations","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"","rawIndexableTextContent":"","title":"Equatable Implementations","kind":"article"},{"headings":[],"kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderable"},"type":"topLevelPage"},"summary":"Represents something that can be  rendered to the terminal.","rawIndexableTextContent":"Represents something that can be  rendered to the terminal. ","title":"Renderable"},{"kind":"symbol","rawIndexableTextContent":"Inherited from Sequence.publisher. ","summary":"Inherited from Sequence.publisher.","title":"publisher","platforms":[{"deprecated":false,"name":"iOS","beta":false,"introducedAt":"13.0","unavailable":false},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"10.15","name":"macOS"},{"unavailable":false,"beta":false,"deprecated":false,"name":"tvOS","introducedAt":"13.0"},{"introducedAt":"6.0","beta":false,"deprecated":false,"name":"watchOS","unavailable":false}],"headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/publisher","interfaceLanguage":"swift"}}},{"rawIndexableTextContent":" ","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/default","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"Color.default","summary":"","headings":[]},{"headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement\/!=(_:_:)","interfaceLanguage":"swift"}},"title":"!=(_:_:)","rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","kind":"symbol","summary":"Inherited from Equatable.!=(_:_:)."},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/starts(with:by:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[],"summary":"Inherited from Sequence.starts(with:by:).","rawIndexableTextContent":"Inherited from Sequence.starts(with:by:). ","kind":"symbol","title":"starts(with:by:)"},{"title":"suffix(_:)","headings":[],"kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/suffix(_:)"}},"rawIndexableTextContent":"Inherited from Sequence.suffix(_:). ","summary":"Inherited from Sequence.suffix(_:)."},{"summary":"","kind":"article","title":"Error Implementations","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/Error-Implementations"}},"headings":[],"rawIndexableTextContent":""},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/whitespace(content:)","interfaceLanguage":"swift"}},"title":"Segment.whitespace(content:)","kind":"symbol","summary":"A segment containing whitespace.","rawIndexableTextContent":"A segment containing whitespace.  The whitespace content.","headings":[]},{"rawIndexableTextContent":"Inherited from Sequence.filter(_:). ","kind":"symbol","title":"filter(_:)","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/filter(_:)-77rlw","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.filter(_:)."},{"kind":"symbol","title":"Segment.lineBreak","summary":"A linebreak segment.","headings":[],"rawIndexableTextContent":"A linebreak segment. ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/lineBreak"}}},{"kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/markupLine(_:)"}},"headings":[],"rawIndexableTextContent":"Writes the specified markup, followed by the current line terminator, to the terminal. ","title":"markupLine(_:)","summary":"Writes the specified markup, followed by the current line terminator, to the terminal."},{"kind":"symbol","title":"first(where:)","summary":"Inherited from Sequence.first(where:).","headings":[],"rawIndexableTextContent":"Inherited from Sequence.first(where:). ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/first(where:)","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"kind":"symbol","title":"init(foreground:background:decoration:)","summary":"","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/init(foreground:background:decoration:)"}},"headings":[],"rawIndexableTextContent":" "},{"rawIndexableTextContent":"A segment containing a control sequence code.  The control sequence code","kind":"symbol","headings":[],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/controlSequence(code:)"}},"summary":"A segment containing a control sequence code.","title":"Segment.controlSequence(code:)"},{"summary":"Renders the object into segments.","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderable\/render(options:maxWidth:)","interfaceLanguage":"swift"}},"headings":["Return Value"],"rawIndexableTextContent":"Renders the object into segments.  The render options. The maximum allowed width. Return Value An array of segments.","title":"render(options:maxWidth:)","kind":"symbol"},{"kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/union(_:)"},"type":"topLevelPage"},"title":"union(_:)","summary":"Inherited from OptionSet.union(_:).","headings":[],"rawIndexableTextContent":"Inherited from OptionSet.union(_:). "},{"summary":"Inherited from Equatable.!=(_:_:).","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/!=(_:_:)","interfaceLanguage":"swift"}},"kind":"symbol","title":"!=(_:_:)","rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","headings":[]},{"summary":"A Style with the default colors and without text decoration","rawIndexableTextContent":"A Style with the default colors and without text decoration ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/plain","interfaceLanguage":"swift"}},"kind":"symbol","headings":[],"title":"plain"},{"summary":"Inherited from SetAlgebra.init(arrayLiteral:).","rawIndexableTextContent":"Inherited from SetAlgebra.init(arrayLiteral:). ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/init(arrayLiteral:)"},"type":"topLevelPage"},"headings":[],"title":"init(arrayLiteral:)","kind":"symbol"},{"headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/OptionSet-Implementations","interfaceLanguage":"swift"}},"title":"OptionSet Implementations","summary":"","kind":"article","rawIndexableTextContent":""},{"headings":[],"title":"!=(_:_:)","kind":"symbol","summary":"Inherited from Equatable.!=(_:_:).","rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/TerminalType\/!=(_:_:)"}}},{"kind":"symbol","headings":[],"rawIndexableTextContent":"Dim or faint text. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/dim","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"dim","summary":"Dim or faint text."},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/init()"},"type":"topLevelPage"},"headings":[],"kind":"symbol","rawIndexableTextContent":" ","summary":"","title":"init()"},{"kind":"symbol","title":"init()","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/init()","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from OptionSet.init().","headings":[],"rawIndexableTextContent":"Inherited from OptionSet.init(). "},{"rawIndexableTextContent":"Inherited from Sequence.lexicographicallyPrecedes(_:by:). ","title":"lexicographicallyPrecedes(_:by:)","summary":"Inherited from Sequence.lexicographicallyPrecedes(_:by:).","kind":"symbol","headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/lexicographicallyPrecedes(_:by:)","interfaceLanguage":"swift"}}},{"headings":[],"rawIndexableTextContent":"Writes the specified string value to the terminal. ","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/write(_:)"},"type":"topLevelPage"},"title":"write(_:)","summary":"Writes the specified string value to the terminal."},{"headings":[],"rawIndexableTextContent":"","kind":"article","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/Equatable-Implementations","interfaceLanguage":"swift"}},"title":"Equatable Implementations","summary":""},{"headings":[],"rawIndexableTextContent":"","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/Equatable-Implementations","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"article","title":"Equatable Implementations","summary":""},{"rawIndexableTextContent":" ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/noColor","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"ColorSystem.noColor","summary":"","kind":"symbol","headings":[]},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement\/Equatable-Implementations","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"","kind":"article","rawIndexableTextContent":"","headings":[],"title":"Equatable Implementations"},{"title":"ColorSystem.standard","summary":"","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/standard","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[],"rawIndexableTextContent":" "},{"kind":"symbol","rawIndexableTextContent":"The maximum width ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement\/max","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"max","summary":"The maximum width","headings":[]},{"kind":"symbol","summary":"Inherited from Sequence.withContiguousStorageIfAvailable(_:).","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/withContiguousStorageIfAvailable(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"withContiguousStorageIfAvailable(_:)","rawIndexableTextContent":"Inherited from Sequence.withContiguousStorageIfAvailable(_:). ","headings":[]},{"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Terminal"}},"rawIndexableTextContent":"Represents a terminal. ","kind":"symbol","summary":"Represents a terminal.","headings":[],"title":"Terminal"},{"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console"}},"title":"Console","summary":"A console capable of rendering Renderable objects to a Terminal.","kind":"symbol","headings":[],"rawIndexableTextContent":"A console capable of rendering Renderable objects to a Terminal. "},{"headings":[],"title":"width","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/width"}},"summary":"Gets the width of the console.","rawIndexableTextContent":"Gets the width of the console. ","kind":"symbol"},{"rawIndexableTextContent":"The text decoration. ","summary":"The text decoration.","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/decoration","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"decoration","headings":[]},{"title":"Segment","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment"},"type":"topLevelPage"},"kind":"symbol","summary":"Represents a segment of text, whitespace, line breaks, or terminal control sequences","headings":[],"rawIndexableTextContent":"Represents a segment of text, whitespace, line breaks, or terminal control sequences "},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"SpectreKit","headings":[],"kind":"symbol","summary":"A Swift framework that makes it easier to create beautiful console applications.","rawIndexableTextContent":"A Swift framework that makes it easier to create beautiful console applications."},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/height","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"height","headings":[],"kind":"symbol","summary":"Gets the height of the console.","rawIndexableTextContent":"Gets the height of the console. "},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/min(by:)"},"type":"topLevelPage"},"kind":"symbol","headings":[],"summary":"Inherited from Sequence.min(by:).","title":"min(by:)","rawIndexableTextContent":"Inherited from Sequence.min(by:). "},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/write(_:lineBreak:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"write(_:lineBreak:)","rawIndexableTextContent":"Writes a Renderable to stdout. ","kind":"symbol","summary":"Writes a Renderable to stdout.","headings":[]},{"rawIndexableTextContent":"Inherited from Sequence.contains(where:). ","summary":"Inherited from Sequence.contains(where:).","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/contains(where:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"contains(where:)","kind":"symbol","headings":[]},{"rawIndexableTextContent":"Options used when rendering a Renderable instance. ","title":"RenderOptions","headings":[],"kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/RenderOptions","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Options used when rendering a Renderable instance."},{"kind":"symbol","title":"isStrictSuperset(of:)","headings":[],"rawIndexableTextContent":"Inherited from SetAlgebra.isStrictSuperset(of:). ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isStrictSuperset(of:)"},"type":"topLevelPage"},"summary":"Inherited from SetAlgebra.isStrictSuperset(of:)."},{"rawIndexableTextContent":"Inherited from Sequence.elementsEqual(_:by:). ","kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/elementsEqual(_:by:)"}},"headings":[],"summary":"Inherited from Sequence.elementsEqual(_:by:).","title":"elementsEqual(_:by:)"},{"rawIndexableTextContent":"","headings":[],"summary":"","kind":"article","title":"Equatable Implementations","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/Equatable-Implementations"}}},{"rawIndexableTextContent":"Inherited from Sequence.flatMap(_:). ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/flatMap(_:)-728bt"}},"kind":"symbol","summary":"Inherited from Sequence.flatMap(_:).","title":"flatMap(_:)","headings":[],"platforms":[]},{"kind":"symbol","rawIndexableTextContent":"Inherited from SetAlgebra.isDisjoint(with:). ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isDisjoint(with:)","interfaceLanguage":"swift"}},"title":"isDisjoint(with:)","headings":[],"summary":"Inherited from SetAlgebra.isDisjoint(with:)."},{"kind":"symbol","rawIndexableTextContent":"Makes text blink. Normally less than 150 blinks per minute. ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/slowBlink"},"type":"topLevelPage"},"summary":"Makes text blink. Normally less than 150 blinks per minute.","title":"slowBlink","headings":[]},{"summary":"Inherited from Renderable.measure(options:maxWidth:).","rawIndexableTextContent":"Inherited from Renderable.measure(options:maxWidth:). ","headings":[],"kind":"symbol","title":"measure(options:maxWidth:)","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Markup\/measure(options:maxWidth:)","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"title":"sorted(using:)","rawIndexableTextContent":"Inherited from Sequence.sorted(using:). ","platforms":[{"deprecated":false,"name":"iOS","introducedAt":"15.0","beta":false,"unavailable":false},{"deprecated":false,"beta":false,"name":"macOS","unavailable":false,"introducedAt":"12.0"},{"name":"tvOS","deprecated":false,"introducedAt":"15.0","unavailable":false,"beta":false},{"unavailable":false,"beta":false,"name":"watchOS","deprecated":false,"introducedAt":"8.0"}],"headings":[],"kind":"symbol","summary":"Inherited from Sequence.sorted(using:).","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/sorted(using:)-8ie2p","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","headings":[],"title":"!=(_:_:)","summary":"Inherited from Equatable.!=(_:_:).","kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/!=(_:_:)"}}},{"summary":"","rawIndexableTextContent":" ","headings":[],"title":"ColorSystem.trueColor","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/trueColor","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol"},{"summary":"","rawIndexableTextContent":"","title":"Equatable Implementations","kind":"article","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/TerminalType\/Equatable-Implementations"}},"headings":[]},{"rawIndexableTextContent":"Inherited from OptionSet.formIntersection(_:). ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/formIntersection(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","title":"formIntersection(_:)","summary":"Inherited from OptionSet.formIntersection(_:).","headings":[]},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Markup\/render(options:maxWidth:)","interfaceLanguage":"swift"}},"headings":[],"summary":"Inherited from Renderable.render(options:maxWidth:).","title":"render(options:maxWidth:)","rawIndexableTextContent":"Inherited from Renderable.render(options:maxWidth:). ","kind":"symbol"},{"kind":"symbol","rawIndexableTextContent":"Writes the specified markup to the terminal. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/markup(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"markup(_:)","summary":"Writes the specified markup to the terminal.","headings":[]},{"kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/subtract(_:)"},"type":"topLevelPage"},"title":"subtract(_:)","headings":[],"summary":"Inherited from SetAlgebra.subtract(_:).","rawIndexableTextContent":"Inherited from SetAlgebra.subtract(_:). "},{"rawIndexableTextContent":" ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/TerminalType\/file","interfaceLanguage":"swift"}},"title":"TerminalType.file","kind":"symbol","summary":"","headings":[]},{"title":"Style","rawIndexableTextContent":"Represents color and text decorations. ","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Represents color and text decorations.","headings":[]},{"summary":"","rawIndexableTextContent":" ","title":"colors","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/colors","interfaceLanguage":"swift"}},"kind":"symbol","headings":[]},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/map(_:)"},"type":"topLevelPage"},"title":"map(_:)","kind":"symbol","summary":"Inherited from Sequence.map(_:).","headings":[],"rawIndexableTextContent":"Inherited from Sequence.map(_:). "},{"kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/allSatisfy(_:)"},"type":"topLevelPage"},"headings":[],"rawIndexableTextContent":"Inherited from Sequence.allSatisfy(_:). ","summary":"Inherited from Sequence.allSatisfy(_:).","title":"allSatisfy(_:)"},{"summary":"Represents text decoration. Support for text decorations are up to the terminal.","title":"Decoration","rawIndexableTextContent":"Represents text decoration. Support for text decorations are up to the terminal. ","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration","interfaceLanguage":"swift"}},"headings":[]},{"rawIndexableTextContent":"Represents an error that can occur during style parsing. ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError","interfaceLanguage":"swift"}},"kind":"symbol","headings":[],"title":"StyleParserError","summary":"Represents an error that can occur during style parsing."},{"summary":"Returns whether or not the color is a default color.","headings":[],"rawIndexableTextContent":"Returns whether or not the color is a default color. ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/isDefault","interfaceLanguage":"swift"}},"title":"isDefault","kind":"symbol"},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement\/min","interfaceLanguage":"swift"}},"title":"min","rawIndexableTextContent":"The minimum width ","kind":"symbol","summary":"The minimum width","headings":[]},{"rawIndexableTextContent":"Measures the object.  The render options. The maximum allowed width. Return Value The minimum and maximum width of the object.","headings":["Return Value"],"title":"measure(options:maxWidth:)","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderable\/measure(options:maxWidth:)","interfaceLanguage":"swift"}},"kind":"symbol","summary":"Measures the object."},{"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/multipleBackground"}},"rawIndexableTextContent":"More than one background was provided ","headings":[],"kind":"symbol","title":"StyleParserError.multipleBackground","summary":"More than one background was provided"},{"headings":[],"title":"type","summary":"Gets the terminal type.","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Terminal\/type","interfaceLanguage":"swift"},"type":"topLevelPage"},"rawIndexableTextContent":"Gets the terminal type. "},{"summary":"","title":"Equatable Implementations","rawIndexableTextContent":"","headings":[],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem\/Equatable-Implementations","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"article"},{"title":"!=(_:_:)","summary":"Inherited from Equatable.!=(_:_:).","kind":"symbol","headings":[],"rawIndexableTextContent":"Inherited from Equatable.!=(_:_:). ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/!=(_:_:)"}}},{"kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/foreground","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"The foreground color.","headings":[],"rawIndexableTextContent":"The foreground color. ","title":"foreground"},{"summary":"The background color.","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/background","interfaceLanguage":"swift"}},"rawIndexableTextContent":"The background color. ","kind":"symbol","title":"background","headings":[]},{"rawIndexableTextContent":"","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/SetAlgebra-Implementations","interfaceLanguage":"swift"}},"title":"SetAlgebra Implementations","summary":"","kind":"article","headings":[]},{"kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Terminal\/width","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"width","rawIndexableTextContent":"The width of the terminal ","headings":[],"summary":"The width of the terminal"},{"title":"underline","headings":[],"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/underline"},"type":"topLevelPage"},"rawIndexableTextContent":"Underlined text. ","kind":"symbol","summary":"Underlined text."},{"title":"combine(style:)","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/combine(style:)","interfaceLanguage":"swift"}},"summary":"Combines this style with another one.","rawIndexableTextContent":"Combines this style with another one.  The style to combine with this one Return Value A new style representing the combination of this style and the other one.","headings":["Return Value"]},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/contains(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","headings":[],"rawIndexableTextContent":"Inherited from Sequence.contains(_:). ","summary":"Inherited from Sequence.contains(_:).","title":"contains(_:)"},{"headings":[],"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/forEach(_:)","interfaceLanguage":"swift"}},"title":"forEach(_:)","rawIndexableTextContent":"Inherited from Sequence.forEach(_:). ","kind":"symbol","summary":"Inherited from Sequence.forEach(_:)."},{"title":"measure(options:maxWidth:)","headings":[],"rawIndexableTextContent":"Inherited from Renderable.measure(options:maxWidth:). ","kind":"symbol","summary":"Inherited from Renderable.measure(options:maxWidth:).","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/measure(options:maxWidth:)"}}},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/compare(_:_:)","interfaceLanguage":"swift"}},"summary":"Inherited from Sequence.compare(_:_:).","title":"compare(_:_:)","platforms":[{"name":"iOS","deprecated":false,"introducedAt":"15.0","unavailable":false,"beta":false},{"deprecated":false,"beta":false,"name":"macOS","unavailable":false,"introducedAt":"12.0"},{"deprecated":false,"introducedAt":"15.0","name":"tvOS","unavailable":false,"beta":false},{"name":"watchOS","deprecated":false,"introducedAt":"8.0","beta":false,"unavailable":false}],"rawIndexableTextContent":"Inherited from Sequence.compare(_:_:). ","headings":[],"kind":"symbol"},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/shuffled(using:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","title":"shuffled(using:)","headings":[],"rawIndexableTextContent":"Inherited from Sequence.shuffled(using:). ","summary":"Inherited from Sequence.shuffled(using:)."},{"summary":"Inherited from Sequence.starts(with:).","title":"starts(with:)","rawIndexableTextContent":"Inherited from Sequence.starts(with:). ","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/starts(with:)","interfaceLanguage":"swift"}},"headings":[]},{"title":"height","summary":"The height of the terminal.","headings":[],"kind":"symbol","rawIndexableTextContent":"The height of the terminal. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Terminal\/height","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"headings":[],"kind":"symbol","title":"append(text:style:)","rawIndexableTextContent":"Appends text with an optional style to the paragraph.  The text to add The text’s style","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/append(text:style:)"}},"summary":"Appends text with an optional style to the paragraph."},{"summary":"Inherited from Sequence.dropLast(_:).","title":"dropLast(_:)","headings":[],"rawIndexableTextContent":"Inherited from Sequence.dropLast(_:). ","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/dropLast(_:)","interfaceLanguage":"swift"}}},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Segment\/empty","interfaceLanguage":"swift"}},"title":"Segment.empty","summary":"An empty segment.","rawIndexableTextContent":"An empty segment. ","headings":[],"kind":"symbol"},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/init(_:)"},"type":"topLevelPage"},"rawIndexableTextContent":"Inherited from SetAlgebra.init(_:). ","kind":"symbol","headings":[],"title":"init(_:)","summary":"Inherited from SetAlgebra.init(_:)."},{"kind":"symbol","headings":[],"rawIndexableTextContent":"Inherited from OptionSet.symmetricDifference(_:). ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/symmetricDifference(_:)","interfaceLanguage":"swift"}},"title":"symmetricDifference(_:)","summary":"Inherited from OptionSet.symmetricDifference(_:)."},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/filter(_:)-6zeap","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","summary":"Inherited from Sequence.filter(_:).","headings":[],"title":"filter(_:)","rawIndexableTextContent":"Inherited from Sequence.filter(_:). ","platforms":[{"introducedAt":"17.0","unavailable":false,"name":"iOS","deprecated":false,"beta":false},{"beta":false,"introducedAt":"14.0","deprecated":false,"name":"macOS","unavailable":false},{"unavailable":false,"beta":false,"deprecated":false,"name":"tvOS","introducedAt":"17.0"},{"name":"watchOS","introducedAt":"10.0","unavailable":false,"deprecated":false,"beta":false}]},{"rawIndexableTextContent":"Swaps the foreground and background colors. ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/invert","interfaceLanguage":"swift"}},"kind":"symbol","summary":"Swaps the foreground and background colors.","title":"invert","headings":[]},{"kind":"symbol","title":"init(terminal:)","rawIndexableTextContent":" ","summary":"","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/init(terminal:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"headings":[]},{"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/next()","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from IteratorProtocol.next().","title":"next()","headings":[],"kind":"symbol","rawIndexableTextContent":"Inherited from IteratorProtocol.next(). "},{"kind":"symbol","title":"shuffled()","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/shuffled()","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from Sequence.shuffled().","headings":[],"rawIndexableTextContent":"Inherited from Sequence.shuffled(). "},{"summary":"Writes a Renderableto the console.","title":"write(_:lineBreak:)","kind":"symbol","rawIndexableTextContent":"Writes a Renderableto the console. ","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Renderer\/write(_:lineBreak:)"},"type":"topLevelPage"},"headings":[]},{"rawIndexableTextContent":"Inherited from SetAlgebra.isStrictSubset(of:). ","title":"isStrictSubset(of:)","kind":"symbol","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isStrictSubset(of:)","interfaceLanguage":"swift"}},"summary":"Inherited from SetAlgebra.isStrictSubset(of:).","headings":[]},{"headings":[],"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/elementsEqual(_:)"}},"kind":"symbol","summary":"Inherited from Sequence.elementsEqual(_:).","rawIndexableTextContent":"Inherited from Sequence.elementsEqual(_:). ","title":"elementsEqual(_:)"},{"rawIndexableTextContent":"Inherited from OptionSet.formSymmetricDifference(_:). ","title":"formSymmetricDifference(_:)","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/formSymmetricDifference(_:)","interfaceLanguage":"swift"}},"kind":"symbol","summary":"Inherited from OptionSet.formSymmetricDifference(_:).","headings":[]},{"kind":"article","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/Sequence-Implementations","interfaceLanguage":"swift"}},"title":"Sequence Implementations","summary":"","headings":[],"rawIndexableTextContent":""},{"headings":[],"rawIndexableTextContent":"Inherited from OptionSet.init(rawValue:). ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/init(rawValue:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"init(rawValue:)","summary":"Inherited from OptionSet.init(rawValue:).","kind":"symbol"},{"title":"bold","kind":"symbol","summary":"Bold text.","headings":[],"rawIndexableTextContent":"Bold text. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/bold","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"rawIndexableTextContent":" ","summary":"","headings":[],"kind":"symbol","title":"init(_:style:)","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Markup\/init(_:style:)","interfaceLanguage":"swift"},"type":"topLevelPage"}},{"location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Style\/Equatable-Implementations"},"type":"topLevelPage"},"kind":"article","summary":"","headings":[],"rawIndexableTextContent":"","title":"Equatable Implementations"},{"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/prefix(_:)"}},"title":"prefix(_:)","rawIndexableTextContent":"Inherited from Sequence.prefix(_:). ","headings":[],"summary":"Inherited from Sequence.prefix(_:).","kind":"symbol"},{"rawIndexableTextContent":"Inherited from SetAlgebra.isEmpty. ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/isEmpty"}},"summary":"Inherited from SetAlgebra.isEmpty.","kind":"symbol","title":"isEmpty","headings":[]},{"rawIndexableTextContent":"Inherited from OptionSet.intersection(_:). ","kind":"symbol","summary":"Inherited from OptionSet.intersection(_:).","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/intersection(_:)"}},"title":"intersection(_:)","headings":[]},{"headings":[],"platforms":[{"introducedAt":"8.0","unavailable":false,"beta":false,"deprecated":false,"name":"iOS"},{"name":"macOS","beta":false,"introducedAt":"10.10","deprecated":false,"unavailable":false},{"unavailable":false,"beta":false,"deprecated":false,"introducedAt":"9.0","name":"tvOS"},{"introducedAt":"2.0","name":"watchOS","beta":false,"deprecated":false,"unavailable":false}],"rawIndexableTextContent":"Inherited from Error.localizedDescription. ","kind":"symbol","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/StyleParserError\/localizedDescription","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Inherited from Error.localizedDescription.","title":"localizedDescription"},{"location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/subtracting(_:)","interfaceLanguage":"swift"}},"title":"subtracting(_:)","summary":"Inherited from SetAlgebra.subtracting(_:).","headings":[],"rawIndexableTextContent":"Inherited from SetAlgebra.subtracting(_:). ","kind":"symbol"},{"summary":"Shows text with a horizontal line through the center.","rawIndexableTextContent":"Shows text with a horizontal line through the center. ","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/strikethrough"},"type":"topLevelPage"},"title":"strikethrough","headings":[]},{"kind":"symbol","rawIndexableTextContent":"Represents a color system ","title":"ColorSystem","headings":[],"location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/ColorSystem","interfaceLanguage":"swift"},"type":"topLevelPage"},"summary":"Represents a color system"},{"rawIndexableTextContent":"\/\/\/ Writes the specified text, followed by the current line terminator, to the terminal. ","kind":"symbol","summary":"\/\/\/ Writes the specified text, followed by the current line terminator, to the terminal.","headings":[],"title":"writeLine(_:)","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/writeLine(_:)","interfaceLanguage":"swift"}}},{"summary":"Inherited from Sequence.max(by:).","title":"max(by:)","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/max(by:)"},"type":"topLevelPage"},"headings":[],"rawIndexableTextContent":"Inherited from Sequence.max(by:). "},{"kind":"symbol","summary":"Italic text.","headings":[],"rawIndexableTextContent":"Italic text. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Decoration\/italic","interfaceLanguage":"swift"},"type":"topLevelPage"},"title":"italic"},{"summary":"Writes the specified text to STDERR.","rawIndexableTextContent":"Writes the specified text to STDERR. ","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Terminal\/writeError(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","title":"writeError(_:)","headings":[]},{"summary":"","title":"Color.number(_:)","location":{"reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Color\/number(_:)","interfaceLanguage":"swift"},"type":"topLevelPage"},"kind":"symbol","headings":[],"rawIndexableTextContent":" "},{"kind":"symbol","summary":"A measurement that has a minimum and maximum value.","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Measurement","interfaceLanguage":"swift"}},"headings":[],"title":"Measurement","rawIndexableTextContent":"A measurement that has a minimum and maximum value. "},{"kind":"symbol","headings":[],"title":"reduce(_:_:)","rawIndexableTextContent":"Inherited from Sequence.reduce(_:_:). ","summary":"Inherited from Sequence.reduce(_:_:).","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/reduce(_:_:)"},"type":"topLevelPage"}},{"title":"splitLines(maxWidth:)","headings":[],"rawIndexableTextContent":" ","summary":"","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/splitLines(maxWidth:)"},"type":"topLevelPage"}},{"location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Paragraph\/init(_:style:)"}},"headings":[],"kind":"symbol","rawIndexableTextContent":" ","title":"init(_:style:)","summary":""},{"kind":"symbol","headings":[],"summary":"Represents a terminal type","rawIndexableTextContent":"Represents a terminal type ","title":"TerminalType","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/TerminalType","interfaceLanguage":"swift"}}},{"summary":"Inherited from Sequence.drop(while:).","headings":[],"title":"drop(while:)","rawIndexableTextContent":"Inherited from Sequence.drop(while:). ","kind":"symbol","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/drop(while:)"}}},{"headings":[],"summary":"Inherited from Sequence.underestimatedCount.","kind":"symbol","rawIndexableTextContent":"Inherited from Sequence.underestimatedCount. ","title":"underestimatedCount","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/underestimatedCount"}}},{"headings":[],"kind":"symbol","rawIndexableTextContent":"Inherited from Sequence.compactMap(_:). ","location":{"type":"topLevelPage","reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/compactMap(_:)"}},"title":"compactMap(_:)","summary":"Inherited from Sequence.compactMap(_:)."},{"headings":[],"rawIndexableTextContent":" ","kind":"symbol","location":{"reference":{"interfaceLanguage":"swift","url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/Console\/terminal"},"type":"topLevelPage"},"title":"terminal","summary":""},{"headings":[],"kind":"symbol","summary":"Inherited from Sequence.prefix(while:).","rawIndexableTextContent":"Inherited from Sequence.prefix(while:). ","location":{"type":"topLevelPage","reference":{"url":"doc:\/\/SpectreKit\/documentation\/SpectreKit\/SegmentLineIterator\/prefix(while:)","interfaceLanguage":"swift"}},"title":"prefix(while:)"}]